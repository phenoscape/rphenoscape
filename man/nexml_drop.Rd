% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nexml.R
\name{nexml_drop}
\alias{nexml_drop}
\alias{nexml_drop_otu}
\alias{nexml_drop_char}
\alias{is_unused_char}
\alias{is_unused_otu}
\title{Drop parts of a nexml object}
\usage{
nexml_drop_otu(nexml, filter, at = NA, block = 1, ...)

nexml_drop_char(nexml, filter, at = NA, block = 1, ...,
  pruneStates = TRUE, pruneRows = TRUE)

is_unused_char(charList, ...)

is_unused_otu(otuList, ...)
}
\arguments{
\item{nexml}{the \link[RNeXML:nexml]{nexml} object from which to drop parts}

\item{filter}{logical, or a function returning a logical. If the latter,
it will be passed the list of selected values for filtering (see parameter
\code{at}), and any additional parameters (see \code{...}). The logical vector selects
the list elements to drop from the given block (see \code{block}).}

\item{at}{character, selects the values for filtering if \code{filter} is a
function. If \code{NA} (the default), a list of the respective objects (\code{otu}
and \code{char}, respectively) are passed. If a string and the value matches
a slot of the objects (such as "id", "label"), a list of those slot values
is passed. Otherwise, it is assumed to be a metadata property for those
objects, and a list of the respective metadata values is selected (with
\code{NA} for objects that do not have a matching metadata annotation).}

\item{block}{integer, the respective block index (for OTUs and character
blocks, respectively).}

\item{...}{for \code{nexml_drop_otu} and \code{nexml_drop_char}, additional parameters
to be passed on to the filter function.

For \code{is_unused_char} and \code{is_unused_otu}, if used outside of serving as
value for the \code{filter} parameter, a parameter \code{characters} with
the characters block (or list thereof), and/or a parameter \code{nexml} with the
nexml object, must be provided. If only \code{nexml} is passed, all characters
blocks is assumed.

\code{is_unused_otu} also accepts \code{ignoreTrees} (default is \code{FALSE}). If set to
\code{TRUE}, trees will be ignored for determining whether an OTU is unused.
Otherwise, if \code{nexml} is \emph{not} passed to \code{is_unused_otu}, a warning will be
issued that it cannot check trees for determining the use of OTUs.}

\item{pruneStates}{logical, whether to also prune (i.e., drop) states that
are no longer used after dropping the selected characters. The default is
TRUE.}

\item{pruneRows}{logical, whether to also prune (i.e., drop) matrix rows
that have become empty (i.e., have no cells left) after dropping the
selected characters. The default is TRUE.}

\item{charList}{a list of \code{char} objects. This will be passed as the values
to filter on.}

\item{otuList}{a list of \code{otu} objects. This will be passed as the values
to filter on.}
}
\value{
The functions for dropping components return a \link[RNeXML:nexml]{nexml}
object with the filtered components dropped.

\code{is_unused_char} returns a logical vector with TRUE for each \code{char}
(character) object that is not used in the matrix (or matrices) of the
characters block(s), and FALSE  otherwise.

\code{is_unused_otu} returns a logical vector with TRUE for each \code{otu}
object that is not used in either the matrix (or matrices) of the characters
block(s), or, unless \code{ignoreTrees = TRUE}, for a node of a tree, and FALSE
otherwise.
}
\description{
\code{nexml_drop_otu} drops OTUs (taxa) from a \link[RNeXML:nexml]{nexml} object.
Currently none of the OTUs to be dropped can be used in a tree that's part
of the \code{nexml} object. If they are, first drop the OTUs from the tree(s)
(for example, using \link[ape:drop.tip]{drop.tip()} from package "ape"), then
replace the tree(s). Dropping OTUs will not only drop them from the OTUs
block, but will also drop matrix rows that referenced the OTUs to be dropped.
This may in turn leave some characters unused. Therefore, it is recommended
to drop unused characters afterwards.

\code{nexml_drop_char} drops characters from a \link[RNeXML:nexml]{nexml} object. Note
that dropping characters may make some OTUs unused if they result in empty
rows and empty rows are pruned (see parameter \code{pruneRows}). It is therefore
recommended to drop unused OTUs afterwards.

\code{is_unused_char} is a filter function for \code{nexml_drop_char} for dropping
unused characters.

\code{is_unused_otu} is a filter function for \code{nexml_drop_otu} for dropping
unused OTUs.
}
\examples{
nex <- RNeXML::nexml_read(system.file("examples", "ontotrace-result.xml", package = "rphenoscape"))
# drop by label matching
nexml_drop_otu(nex, filter = function(x) grepl(" sp.", x), at = "label")

# can pipe dropping and then removing potentially unused characters or OTUs:
library(dplyr)
nexml_drop_char(nex, filter = function(x) grepl("pelvic", x), at = "label") \%>\%
  nexml_drop_otu(filter = is_unused_otu)

\dontrun{
nex <- get_ontotrace_data(taxon = "Ictaluridae",
                          entity = "fin", variable_only = FALSE)
# ontotrace results store VTO IRIs in dwc:taxonID annotations:
nexml_drop_otu(nex,
               filter = function(x) !pk_is_descendant("Ictalurus", x),
               at = "dwc:taxonID") \%>\%
  nexml_drop_char(filter = is_unused_char)
# anatomy IRIs are in obo:IAO_0000219 ("denotes") annotations:
nexml_drop_char(nex,
               filter = function(x)
                 !pk_is_descendant("paired fin", x, includeRels = "part_of"),
               at = "obo:IAO_0000219") \%>\%
  nexml_drop_otu(filter = is_unused_otu)
}
}
