% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/semsim.R
\name{similarity}
\alias{similarity}
\alias{tanimoto_similarity}
\alias{jaccard_similarity}
\alias{cosine_similarity}
\alias{resnik_similarity}
\title{Compute semantic similarity metrics between terms}
\usage{
tanimoto_similarity(subsumer_mat = NA, terms = NULL, ...)

jaccard_similarity(subsumer_mat = NA, terms = NULL, ...)

cosine_similarity(subsumer_mat = NA, terms = NULL, ...)

resnik_similarity(
  subsumer_mat = NA,
  terms = NULL,
  ...,
  wt = term_freqs,
  wt_args = list(),
  base = 10
)
}
\arguments{
\item{subsumer_mat}{matrix or data.frame, the vector-encoded matrix M of
subsumers for which \eqn{M_{i,j} = W_i, W_i > 0}{M[i,j] = W[i], with W[i] > 0} (W = weights),
if class \emph{i} subsumes term j, and 0 otherwise. A binary
(\eqn{M_{i,j} \in \{0, 1\}}{M[i,j] in {0, 1}}) encoding (i.e., W[\emph{i}] = 1)
can be obtained from \code{\link[=subsumer_matrix]{subsumer_matrix()}}.}

\item{terms}{character, optionally the list of terms (as IRIs and/or labels)
for which to generate a properly encoded subsumer matrix on the fly.}

\item{...}{parameters to be passed on to \code{\link[=subsumer_matrix]{subsumer_matrix()}}
if a subsumer matrix is to be generated on the fly.}

\item{wt}{numeric or a function. If numeric, weights for the subsumer terms.
For \code{resnik_similarity}, these are expected to be information content (IC)
scores, though any score will work for which a higher value means higher
information content, and where a term will always have a score equal to or
greater than any of its superclasses. If a function, it must accept parameter
\code{x} as the vector of term IRIs and return a vector of frequencies (\emph{not}
IC scores) for the terms. The default is to use function \code{\link[=term_freqs]{term_freqs()}}.
Subsumer terms with zero or missing (NA) frequency will be omitted from
the calculation.}

\item{wt_args}{list, named parameters for the function calculating term
frequencies. Ignored if \code{wt} is not a function. For the default \code{wt}
function \code{\link[=term_freqs]{term_freqs()}}, the main parameters are \code{as} and \code{corpus}.}

\item{base}{integer, the base of the logarithm for calculating information
content from term frequency. The default is 10.}
}
\value{
A matrix with M[i,j] = similarity of terms \emph{i} and \emph{j}.
}
\description{
The Tanimoto similarity ST is computed according to the definition for bit vectors
(see \href{https://en.wikipedia.org/wiki/Jaccard_index#Tanimoto's_definitions_of_similarity_and_distance}{Jaccard index at Wikipedia}).
For weights \eqn{W_i \in \{0, 1\}}{W[i] in {0, 1}} it is the same as the
Jaccard similarity.
The Tanimoto similarity can be computed for any term vectors, but for 1 - ST
to be a proper distance metric satisfying the triangle inequality,
\eqn{M_{i,j} \in \{0, W_i\}}{M[i,j] in {0, W[i]}} must hold.

The Jaccard similarity is computed using the Tanimoto similarity definition
for bit vectors
(see \href{https://en.wikipedia.org/wiki/Jaccard_index#Tanimoto's_definitions_of_similarity_and_distance}{Jaccard index at Wikipedia}).
For the results to be a valid Jaccard similarity, weights must be zero and
one. If any weights are different, a warning is issued.

The Cosine similarity \emph{SC} is computed using the Euclidean dot product formula.
See \href{https://en.wikipedia.org/wiki/Cosine_similarity#Definition}{Cosine similarity on Wikipedia}.
The metric is valid for any term vectors (columns of the subsumer matrix), i.e.,
\eqn{M_{i,j} \in \{0, W_i\}}{M[i,j] in {0, W[i]}} is not required. Note that
1 - \emph{SC} is not a proper distance metric, because it violates the triangle
inequality. First convert to angle to obtain a distance metric.

The Resnik similarity between two terms is the information content (IC) of
their most informative common ancestor (MICA), which is the common subsumer
with the greatest information content.
}
\examples{
sm <- jaccard_similarity(terms = c("pelvic fin", "pectoral fin",
                                   "forelimb", "hindlimb",
                                   "dorsal fin", "caudal fin"),
                         .colnames = "label")
sm

# e.g., turn into distance matrix, cluster, and plot
plot(hclust(as.dist(1-sm)))
\dontrun{
phens <- get_phenotypes("basihyal bone", taxon = "Cyprinidae")
sm.ic <- resnik_similarity(terms = phens$id,
                           .colnames = "label", .labels = phens$label,
                           wt_args = list(as = "phenotype",
                                          corpus = "taxa"))
maxIC <- -log10(1 / corpus_size("taxa"))
# normalize by max IC, turn into distance matrix, cluster, and plot
plot(hclust(as.dist(1-sm.ic/maxIC)))
}
}
\references{
Philip Resnik (1995). "Using information content to evaluate semantic
similarity in a taxonomy". Proceedings of the 14th International Joint
Conference on Artificial Intelligence (IJCAI'95). \strong{1}: 448â€“453
}
