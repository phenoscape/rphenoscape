% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_IRI.R
\name{partOf_iri}
\alias{partOf_iri}
\alias{hasPart_iri}
\alias{developsFrom_iri}
\alias{term_iri}
\title{Obtain IRI(s) for canonical terms and properties}
\usage{
partOf_iri()

hasPart_iri()

developsFrom_iri()

term_iri(label, type = "owl:Class", preferOntologies = NULL, firstOnly = TRUE)
}
\arguments{
\item{label}{character, the label of the term for which to obtain the IRI}

\item{type}{character, the type of the term, as a IRI or using common
namespace prefixes such as "owl", "rdf", etc. For example, "owl:Class",
or "owl:ObjectProperty". The default is "owl:Class".}

\item{preferOntologies}{character, an array of ontologies to use for preference.
In the case of multiple matches, matches will be reordered in the order given,
and if matches are from preferred and other ontologies, those from ontologies
not in the preference list will be discarded. If provided and only matches
from ontologies not in the preference list are found, they will not be cached.
Can be provided as OBO ontology prefixes, or full ontology IRIs. The default
is no preferences.}

\item{firstOnly}{boolean, whether to return only the first match in case of
multiple matches. The default is TRUE.}
}
\value{
Character, the IRI(s) for the requested term or property.
}
\description{
\code{partOf_iri} returns the IRI ofthe canonical "part_of" relationship in the
database.

\code{hasPart_iri} returns the IRI ofthe canonical "has_part" relationship in the
database.

\code{developsFrom_iri} returns the IRI of the canonical "develops from" relationship in the
database.

Provides cached access to IRIs of terms and properties that are frequently used.
}
\details{
Requested IRIs are not hard-coded. Instead, they are dynamically retrieved from
the API when first queried, and (depending on parameters) are subsequently held
in cache in the session. Hence, if they were to change in the database, the R
session would need to be restarted for this change to be reflected in the result.

For the frequently needed properties "part of", "has part" etc, one should use
the predefined functions (\code{\link[=partOf_iri]{partOf_iri()}}, \code{\link[=hasPart_iri]{hasPart_iri()}}), so that the correct
matches are cached and used internally by the package.
}
\examples{
term_iri("part of", type = "owl:ObjectProperty", preferOntologies = c("RO", "BFO"))
term_iri("develops from", type = "owl:ObjectProperty", preferOntologies = c("RO"))
term_iri("anatomical structure", firstOnly = FALSE)
}
