% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cache.R
\name{cache_serializableMemory}
\alias{cache_serializableMemory}
\title{In-memory cache initialized from file}
\usage{
cache_serializableMemory(algo = "sha512", path = NULL,
  compress = FALSE)
}
\arguments{
\item{algo}{The hashing algorithm used for the cache, see
\code{\link[digest]{digest}} for available algorithms.}

\item{path}{the path for the file from which to initially load the cache, and
by default also the one to restore from and serialize to when requested.
If the file does not exist it will be treated as if an empty file had been
provided.}

\item{compress}{logical, whether to use compression when serializing the cache.}
}
\value{
An object (in the form of a list) with the same interface as the objects
returned by \code{\link[memoise:cache_memory]{memoise::cache_memory()}} etc., with functions \code{serialize()} and
\code{restore()} added. Both accept parameter \code{path}, which defaults to the value
of the \code{path} parameter above, and serializes / restores the cache to / from
the file designated by its value.
}
\description{
A cache in memory, but initialized from, and serializable to a file on the
filesystem. Anything added to the cache and not serialized will last only in
the current R session. The persistent file cache can be updated by invoking
\code{cacheObj$serialize()} (where \code{cacheObj} is the object returned by this
function), or a file copy can be created by passing a different path as
argument to the invocation.
}
\details{
The implementation is based on \code{\link[memoise:cache_memory]{memoise::cache_memory()}}, and is fully
compatible as a cache function with \code{\link[memoise:memoise]{memoise::memoise()}} (parameter \code{cache}).
It differs in the following ways:
\itemize{
\item The object returned (a list) has additional keys \code{serialize} and \code{restore},
both functions accepting a path to a file.
\item The computed hash values (as keys for the cache) remain the same across
reinstallation of this package, making it possible to use a persistent
cache that comes installed with the package.
}
}
\references{
Hadley Wickham, Jim Hester, Kirill MÃ¼ller and Daniel Cook (2017).
memoise: Memoisation of Functions. R package version 1.1.0.
https://CRAN.R-project.org/package=memoise
}
\seealso{
Other cache methods: \code{\link{restore_cache}},
  \code{\link{serialize_cache}}
}
\concept{cache methods}
\keyword{internal}
