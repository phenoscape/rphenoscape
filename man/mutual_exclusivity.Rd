% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mutual_exclusivity.R
\name{mutual_exclusivity}
\alias{mutual_exclusivity}
\title{Determine mutual exclusivity among two or more phenotypes.}
\usage{
mutual_exclusivity(phenotypes, studies = NULL, progress_bar = TRUE)
}
\arguments{
\item{phenotypes}{character or phenotype, a vector of phenotype IDs, or
phenotype objects for which one wants to determine the mutual exclusivity.}

\item{studies}{character, a vector of study IDs (optional) if one is
interested in determining mutual exclusivity based on the evidence from a
particular set of studies.}

\item{progress_bar}{logical, whether to print progress of the function. Default
is TRUE since it is suggested to track the progress of the function especially
if several (hundred) phenotypes are passed.

WARNING: setting progress_bar to TRUE clears the R console by executing the
cat('\014') command before printing the progress.}
}
\value{
A list consisting a matrix and a dataframe that contain mutual exclusivity
results for the phenotypes.
The first item in the list is a matrix which is square and whose size is
equal to the number of phenotypes.
Each cell of the matrix contains an integer value that informs about the mutual exclusivity
among the phenotypes corresponding to the row and the column of the cell.
The integers are numeric representation of the factor level returned by the
mutual_exclusivity_pair() function. Refer the documentation of mutual_exclusivity_pair()
to see its return value.

The second item in the list is a dataframe that contains five columns:
the labels and ids of each phenotype of a pair, and the mutual exclusivity
type of the pair. The fifth column 'mutual_exclusivity' is an ordered factor
that has the same levels as returned by the mutual_exclusivity_pair() function.
Refer the documentation of mutual_exclusivity_pair() to see its return value.
}
\description{
The function computes mutual exclusion among all distinct pairs of phenotypes
by making calls to the mutual_exclusivity_pair() function.
}
\examples{
\dontrun{
# Example 1: pass phenotypes as characters with phenotype IDs
# get a specific study of interest based on which mutual exclusivity is to be determined
studies <- pk_get_study_list()
study <- studies$id[studies$label == 'Dillman et al. (2016)']

# get phenotypes ids present in the study
phenotypes <- get_phenotypes(study = study)
phenotypes_ids <- phenotypes$id

# determine mutual exclusivity
exclusivity <- mutual_exclusivity(phenotypes_ids)

# resultant matrix
exclusivity$matrix

# resultant dataframe
str(exclusivity$dataframe)

# filter dataframe to contain only mutually exclusive phenotypes
exclusivity_df <- exclusivity$dataframe
exclusive_phenotype_pairs <- exclusivity_df[exclusivity_df$mutual_exclusivity == "weak_exclusivity" |
                                                                          exclusivity_df$mutual_exclusivity == "strong_exclusivity", ]

# Example 2: pass phenotypes as phenotype objects
# get phenotypes objects present in the study
phenotypes <- get_phenotypes(study = study)
phenotypes_objs <- as.phenotype(phenotypes, withTaxa=TRUE)

# determine mutual exclusivity
exclusivity <- mutual_exclusivity(phenotypes_objs)

# resultant matrix
exclusivity$matrix

# resultant dataframe
str(exclusivity$dataframe)
}
}
