% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/term-weights.R
\name{term_freqs}
\alias{term_freqs}
\title{Obtains term frequencies for the Phenoscape KB}
\usage{
term_freqs(
  x,
  as = c("phenotype", "entity", "quality"),
  corpus = c("taxa", "taxon_annotations", "gene_annotations", "genes"),
  decodeIRI = FALSE,
  ...
)
}
\arguments{
\item{x}{a vector or list of one or more terms, either as IRIs or as term
objects.}

\item{as}{the category or categories of the input terms (see \code{\link[=term_category]{term_category()}}).
Supported categories are "entity", "quality", and "phenotype". (At present,
support for "entity" and "quality" has been disabled as of v0.3.0, pending full support from the KB API.)
The value must either be a single category (applying to all terms), or a vector of
categories (of same length as \code{x}). The default is "phenotype".}

\item{corpus}{the name of the corpus for which to determine frequencies.
Supported values are "taxon_annotations", "taxa", "gene_annotations", and
"genes". (At present, support for "gene_annotations" and "taxon_annotations" is disabled, pending support in
the Phenoscape KB API.)
The default is "taxa".}

\item{decodeIRI}{boolean. This parameter is deprecated (as of v0.3.x) and must be set
to FALSE (the default). If TRUE is passed an error will be raised. In v0.2.x
when TRUE this parameter would attempt to decode post-composed entity IRIs.
Due to changes in the IRI returned by the Phenoscape KB v2.x API decoding
post-composed entity IRIs is no longer possible. Prior to v0.3.x, the default
value for this parameter was TRUE.}

\item{...}{additional query parameters to be passed to the function querying
for counts, see \code{\link[=pkb_args_to_query]{pkb_args_to_query()}}. Currently this is only used for
corpus "taxon_annotations", and the only useful parameter is \code{includeRels},
which can be used to include historical and serial homologues in the counts.
It can also be used to always include parts for entity terms.}
}
\value{
a vector of frequencies as floating point numbers (between zero
and 1.0), of the same length (and ordering) as the input list of terms.
}
\description{
Determines the frequencies for the given input list of terms, based on
the selected corpus.
}
\details{
Depending on the corpus selected, the frequencies are queried directly
from pre-computed counts through the KB API, or are calculated based on
matching row counts obtained from query results. Currently, the Phenoscape KB
has precomputed counts for corpora "taxa" and "genes".
}
\note{
Term categories being accurate is vital for obtaining correct counts and
thus frequencies. In earlier (<=0.2.x) releases, auto-determining term
category was an option, but this is no longer supported, in part because it
was potentially time consuming and sometimes inaccurate, in particular for
the many post-composed subsumer terms returned by \code{\link[=subsumer_matrix]{subsumer_matrix()}}. In the
KB v2.0 API, auto-determining the category of a post-composed term is no
longer supported. If the list of terms is legitimately of different categories,
determine (and possibly correct) categories beforehand using \code{\link[=term_category]{term_category()}}.
In earlier (<=0.2.x) releases the "taxon_annotations" corpus was supported, but
this is no longer the case due to the inability to determine an accurate
count for post-composed terms with the KB v2.0 API. This also means that the
only supported value for the \code{as} parameter is "phenotype" since "entity" and
"quality" were only supported for the "taxon_annotations" corpus.
}
\examples{
phens <- get_phenotypes(entity = "basihyal bone")
term_freqs(phens$id, as = "phenotype", corpus = "taxa")
term_freqs(phens$id, as = "phenotype", corpus = "genes")
}
